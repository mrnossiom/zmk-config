#define ZMK_POINTING_DEFAULT_MOVE_VAL 600 // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10  // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define LYR_BASE 0
#define LYR_SYM 1
#define LYR_NUM 2
#define LYR_NAV 3
#define LYR_NUM_NAV 4
#define LYR_FUNC 5
#define LYR_MOUSE 6
#define LYR_BT 7

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            // keys on the right
            hold-trigger-key-positions = <
                 6  7  8  9 10 11
                18 19 20 21 22 23
                30 31 32 33 34 35
            >;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            // keys on the left
            hold-trigger-key-positions = <
                 0  1  2  3  4  5
                12 13 14 15 16 17
                24 25 26 27 28 29
            >;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_0 {
            bindings = <
&none   &kp Q        &kp W       &kp E       &kp R            &kp T             /*|*/ &kp Y             &kp U             &kp I          &kp O       &kp P           &none
&kp ESC &hml LSHFT A &hml LALT S &hml LGUI D &hml LCTRL F     &kp G             /*|*/ &kp H             &hmr RCTRL J      &hmr RGUI K    &hmr RALT L &hmr RSHFT SEMI &none
&none   &kp Z        &kp X       &kp C       &kp V            &kp B             /*|*/ &kp N             &kp M             &kp COMMA      &kp DOT     &kp SLASH       &none
                                 &mo LYR_BT  &lt LYR_NUM BSPC &lt LYR_NAV SPACE /*|*/ &lt LYR_NAV SPACE &lt LYR_SYM ENTER &tog LYR_MOUSE
            >;
        };

        symbols_1 {
            bindings = <
&none &kp CARET &kp LT   &kp GT   &kp DOLLAR &kp PRCT  /*|*/ &kp AT   &kp AMPS &kp STAR  &kp SQT   &kp GRAVE &none
&none &kp LBRC  &kp LPAR &kp RPAR &kp RBRC   &kp EQUAL /*|*/ &kp BSLH &kp PLUS &kp MINUS &kp SLASH &kp DQT   &none
&none &kp TILDE &kp LBKT &kp RBKT &kp UNDER  &kp HASH  /*|*/ &kp PIPE &kp EXCL &kp SEMI  &kp COLON &kp QMARK &none
                         &none    &none      &none     /*|*/ &none    &none    &none
            >;
        };

        numbers_2 {
            bindings = <
&none &none  &none  &none  &none  &none     /*|*/ &none     &none  &none  &none  &none  &none
&none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5    /*|*/ &kp N6    &kp N7 &kp N8 &kp N9 &kp N0 &none
&none &none  &none  &none  &none  &none     /*|*/ &none     &none  &none  &none  &none  &none
                    &none  &none  &kp SPACE /*|*/ &kp SPACE &none  &none
            >;
        };

        navigation_3 {
            bindings = <
&none &tog LYR_NUM_NAV &kp LC(W) &kp K_BACK  &kp K_FORWARD &none /*|*/ &kp HOME         &kp PAGE_DOWN    &kp PAGE_UP     &kp END         &none         &none
&none &kp LC(A)        &kp LC(S) &kp LS(TAB) &kp TAB       &none /*|*/ &kp LEFT         &kp DOWN         &kp UP          &kp RIGHT       &tog LYR_FUNC &none
&none &kp LC(Z)        &kp LC(X) &kp LC(C)   &kp LC(V)     &none /*|*/ &msc MOVE_X(-10) &msc MOVE_Y(-10) &msc MOVE_Y(10) &msc MOVE_X(10) &none         &none
                                 &none       &kp DEL       &none /*|*/ &none            &kp ESC          &none
            >;
        };

        // toggled
        num_nav_4 {
            bindings = <
&none &kp TAB   &kp HOME       &kp UP_ARROW &kp END          &kp PAGE_UP /*|*/ &kp MINUS &kp N7           &kp N8 &kp N9 &kp ESC &none
&none &kp LC(A) &kp LEFT       &kp DOWN     &kp RIGHT        &kp DOWN    /*|*/ &kp C     &kp N4           &kp N5 &kp N6 &kp N0  &none
&none &kp LC(Z) &kp LS(DELETE) &kp LC(INS)  &kp LS(INS)      &kp LS(TAB) /*|*/ &kp DOT   &kp N1           &kp N2 &kp N3 &kp DOT &none
                               &none        &tog LYR_NUM_NAV &kp SPACE   /*|*/ &kp SPACE &tog LYR_NUM_NAV &none
            >;
        };

        // toggled
        function_pad_5 {
            bindings = <
&none &kp F1 &kp F2  &kp F3  &kp F4        &kp C_VOL_UP /*|*/ &kp C_BRI_UP &none          &none      &none      &kp K_MENU &none
&none &kp F5 &kp F6  &kp F7  &kp F8        &kp C_VOL_DN /*|*/ &kp C_BRI_DN &none          &none      &none      &none      &none
&none &kp F9 &kp F10 &kp F11 &kp F12       &kp C_MUTE   /*|*/ &none        &kp C_PREVIOUS &kp C_PLAY &kp C_NEXT &none      &none
                     &none   &tog LYR_FUNC &none        /*|*/ &none        &tog LYR_FUNC  &none
            >;
        };

        // toggled
        mouse_6 {
            bindings = <
&none &none &none &none &none          &none /*|*/ &none            &mkp LCLK        &mkp RCLK       &none           &none &none
&none &none &none &none &none          &none /*|*/ &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP    &mmv MOVE_RIGHT &none &none
&none &none &none &none &none          &none /*|*/ &msc MOVE_X(-10) &msc MOVE_Y(-10) &msc MOVE_Y(10) &msc MOVE_X(10) &none &none
                  &none &tog LYR_MOUSE &none /*|*/ &none            &tog LYR_MOUSE   &none
            >;
        };

        bluetooth_7 {
            bindings = <
&none &none        &none        &none        &none        &none        /*|*/ &none          &none      &none &none &none &none
&none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 /*|*/ &bt BT_CLR_ALL &bt BT_CLR &none &none &none &none
&none &none        &none        &none        &none        &none        /*|*/ &none          &none      &none &none &none &none
                                &none        &none        &none        /*|*/ &none          &none      &none
            >;
        };
    };
};
