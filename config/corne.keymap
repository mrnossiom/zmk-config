#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 19 18 17 16 15 25 26 27 28 29>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <4 3 2 1 0 10 11 12 13 14 20 21 22 23 24>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        function {
            bindings = <&mo 5>;
            key-positions = <32 31>;
        };

        bluetooth {
            bindings = <&mo 6>;
            key-positions = <20 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_base_0 {
            bindings = <
&trans &kp Q  &kp W            &kp E            &kp R         &kp T      /*|*/ &kp Y        &kp U         &kp I            &kp O            &kp P     &trans 
&trans &kp A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LCTRL F  &kp G      /*|*/ &kp H        &hmr RCTRL J  &hmr RIGHT_GUI K &hmr RIGHT_ALT L &kp SEMI  &trans 
&trans &kp Z  &kp X            &kp C            &kp V         &kp B      /*|*/ &kp N        &kp M         &kp COMMA        &kp DOT          &kp SLASH &trans 
                               &trans           &mt LSHFT DEL &lt 3 BSPC /*|*/ &lt 3 SPACE  &lt 1 ENTER   &trans
            >;
        };

        ergol_base_0 {
            bindings = <
&trans &kp Q  &kp C           &kp O           &kp P         &kp W      /*|*/ &kp J       &kp M        &kp D             &trans/*todo:deadkey*/ &kp Y &trans 
&trans &kp A  &hml LEFT_ALT S &hml LEFT_GUI E &hml LCTRL N  &kp F      /*|*/ &kp L       &hmr RCTRL R &hmr RIGHT_GUI T  &hmr RIGHT_ALT I       &kp U &trans 
&trans &kp Z  &kp X           &kp QUESTION    &kp V         &kp B      /*|*/ &kp COLON   &kp H        &kp G             &kp SEMI               &kp K &trans 
                              &trans          &mt LSHFT DEL &lt 4 BSPC /*|*/ &lt 4 SPACE &lt 1 ENTER  &trans
            >;
        };

        lafayette_1 {
            bindings = <
&trans &kp LS(NUMBER_6)     &kp RA(W) &kp RA(E) &kp LS(N4)            &kp LS(N5) /*|*/ &kp LS(N0)        &kp AMPS      &kp STAR        &kp SQT    &kp GRAVE            &trans 
&trans &kp LS(LEFT_BRACKET) &kp RA(S) &kp RA(D) &kp LS(RIGHT_BRACKET) &kp EQUAL  /*|*/ &kp BSLH          &kp LS(EQUAL) &kp C           &kp MINUS  &kp LS(SINGLE_QUOTE) &trans 
&trans &kp TILDE            &kp LBKT  &kp RBKT  &kp LS(MINUS)         &kp LS(N9) /*|*/ &kp LS(BACKSLASH) &kp LS(O)     &kp LS(PERIOD)  &kp LS(N)  &kp LS(C)            &trans 
                                      &trans    &mt LSHFT ESC         &lt 3 BSPC /*|*/ &lt 3 SPACE       &lt 1 ENTER   &trans
            >;
        };

        num_row_2 {
            bindings = <
&trans &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4)    &kp LS(N5) /*|*/ &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0) &trans 
&trans &kp N1     &kp N2     &kp N3     &kp N4        &kp N5     /*|*/ &kp N6     &kp N7     &kp N8     &kp N9     &kp N0     &trans 
&trans &trans     &trans     &trans     &trans        &trans     /*|*/ &trans     &trans     &trans     &trans     &trans     &trans 
                             &trans     &mt LSHFT DEL &lt 4 BSPC /*|*/ &kp ESC    &trans     &trans
            >;
        };

        vim_nav_3 {
            bindings = <
&trans &kp Q &kp W &kp E  &kp R &kp T         /*|*/ &kp Y      &kp U       &kp I       &kp O   &kp P     &trans 
&trans &kp A &kp S &kp D  &kp F &kp G         /*|*/ &kp H      &kp J       &kp K       &kp L   &kp SEMI  &trans 
&trans &kp Z &kp X &kp C  &kp V &kp B         /*|*/ &kp N      &kp M       &kp COMMA   &kp DOT &kp SLASH &trans 
                   &trans       &mt LSHFT DEL /*|*/ &lt 4 BSPC &lt 4 SPACE &lt 1 ENTER &trans
            >;
        };

        num_nav_4 {
            bindings = <
&kp TAB   &kp HOME       &kp UP_ARROW &kp END       &kp PAGE_UP /*|*/ &kp MINUS   &kp N7      &kp N8 &kp N9 &kp ESC
&kp LC(A) &kp LEFT       &kp DOWN     &kp RIGHT     &kp DOWN    /*|*/ &kp C       &kp N4      &kp N5 &kp N6 &kp N0
&kp LC(Z) &kp LS(DELETE) &kp LC(INS)  &kp LS(INS)   &kp LS(TAB) /*|*/ &kp DOT     &kp N1      &kp N2 &kp N3 &kp DOT
                         &trans       &mt LSHFT DEL &lt 4 BSPC  /*|*/ &lt 4 SPACE &lt 1 ENTER &trans
            >;
        };

        function_pad_5 {
            bindings = <
&trans &kp F1 &kp F2  &kp F3  &kp F4  &kp C_VOL_UP /*|*/ &kp C_BRI_UP &trans         &trans     &trans     &trans &trans 
&trans &kp F5 &kp F6  &kp F7  &kp F8  &kp C_VOL_DN /*|*/ &kp C_BRI_DN &trans         &trans     &trans     &trans &trans 
&trans &kp F9 &kp F10 &kp F11 &kp F12 &kp C_MUTE   /*|*/ &trans       &kp C_PREVIOUS &kp C_PLAY &kp C_NEXT &trans &trans 
                      &trans  &trans  &trans       /*|*/ &trans       &trans         &trans  
            >;
        };

        bluetooth_6 {
            bindings = <
&trans &trans &trans        &trans         &trans         &trans     /*|*/ &trans &bt BT_CLR    &trans       &trans       &trans &trans 
&trans &trans &trans        &bt BT_DISC 4  &bt BT_DISC 3  &trans     /*|*/ &trans &bt BT_SEL 3  &bt BT_SEL 4 &trans       &trans &trans 
&trans &trans &bt BT_DISC 2 &bt BT_DISC 1  &bt BT_DISC 0  &trans     /*|*/ &trans &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans 
                            &trans         &bt BT_CLR_ALL &bt BT_CLR /*|*/ &trans &trans        &trans
            >;
        };

        mouse_7 {
            bindings = <
&trans &trans &msc MOVE_X(-10) &mmv MOVE_UP   &msc MOVE_X(10) &msc MOVE_Y(10)  /*|*/ &trans &trans    &trans    &trans &trans &trans 
&trans &trans &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc MOVE_Y(-10) /*|*/ &trans &mkp LCLK &mkp RCLK &trans &trans &trans 
&trans &trans &trans           &trans         &trans          &trans           /*|*/ &trans &trans    &trans    &trans &trans &trans 
                               &trans         &trans          &trans           /*|*/ &trans &trans    &trans
            >;
        };
    };
};
